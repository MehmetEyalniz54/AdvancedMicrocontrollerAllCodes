using System;
using System.Collections.Generic;
using System.Drawing;
using System.IO.Ports;
using System.Windows.Forms;

namespace MehmetEyalniz54
{
    public partial class MainForm : Form
    {
        private string gelenveri = string.Empty; // Gelen veriyi saklamak için sınıf düzeyinde tanımlandı.
        private string adcValue= string.Empty;
        public MainForm()
        {
            InitializeComponent();
        }

        // Port Bağlantısını Aç
        void BttnPortOpenClick(object sender, EventArgs e)
        {
            if (!serialPort1.IsOpen)
            {
                try
                {
                    if (string.IsNullOrEmpty(textCom.Text) || string.IsNullOrEmpty(textBaudrate.Text) || string.IsNullOrEmpty(textDataBits.Text))
                    {
                        MessageBox.Show("Lütfen tüm alanları doldurun!");
                        return;
                    }

                    serialPort1.PortName = textCom.Text;
                    serialPort1.BaudRate = Convert.ToInt32(textBaudrate.Text);
                    serialPort1.DataBits = Convert.ToInt32(textDataBits.Text);
                    serialPort1.Open();
                    MessageBox.Show("Bağlantı Başarılı!");
                }
                catch (Exception ex)
                {
                    MessageBox.Show("Bağlantı Hatası: " + ex.Message);
                }
            }
            else
            {
                MessageBox.Show("Port zaten açık!");
            }
        }

        // Port Bağlantısını Kapat
        void BttnPortCloseClick(object sender, EventArgs e)
        {
            if (serialPort1.IsOpen)
            {
                serialPort1.Close();
                MessageBox.Show("Bağlantı Kesildi!");
            }
            else
            {
                MessageBox.Show("Port zaten kapalı!");
            }
        }

        // Saat Bilgisi Gönder
        void BttnClockGetClick(object sender, EventArgs e)
        {
            string saat = textStartAt.Text;

            if (!string.IsNullOrEmpty(saat) && saat.Length == 8 && saat.Contains(":"))
            {
                try
                {
                    serialPort1.WriteLine(saat); // Mikroişlemciye saat bilgisi gönder
                    MessageBox.Show("Saat Bilgisi Gönderildi!");
                }
                catch (Exception ex)
                {
                    MessageBox.Show("Veri Gönderim Hatası: " + ex.Message);
                }
            }
            else
            {
                MessageBox.Show("Lütfen 'hh:mm:ss' formatında geçerli bir saat giriniz!");
            }
        }

        // Reset Komutu Gönder
        void BttnResetClick(object sender, EventArgs e)
        {
            try
            {
                if (serialPort1.IsOpen)
                {
                    serialPort1.WriteLine("RESET_SYSTEM"); // Mikroişlemciye reset komutu gönder
                    MessageBox.Show("Sistem Resetleme Komutu Gönderildi!");
                }
                else
                {
                    MessageBox.Show("Port açık değil! Lütfen önce portu açın.");
                }
            }
            catch (Exception ex)
            {
                MessageBox.Show("Resetleme Hatası: " + ex.Message);
            }
        }
        
void ButonADCOkuClick(object sender, EventArgs e)
{
    try
    {
        // Seri portun açık olduğundan emin olun
        if (serialPort1.IsOpen)
        {
            // Seri porttan gelen veriyi oku
            string adcValue = serialPort1.ReadExisting();

            // ADC verisini bir metin kutusunda göster
            textADC.Text = adcValue;
            Console.WriteLine("ADC Verisi: " + adcValue);

            // Kullanıcıya bilgi mesajı göster
            MessageBox.Show("ADC Verisi Alındı: " + adcValue);
        }
        else
        {
            MessageBox.Show("Seri port açık değil! Lütfen seri portu kontrol edin.");
        }
    }
    catch (Exception ex)
    {
        // Hata durumunda mesaj göster
        MessageBox.Show("Veri Alma Hatası: " + ex.Message);
    }
}



        // Gelen Veriyi İşle
        private void SerialPort1DataReceived(object sender, SerialDataReceivedEventArgs e)
        {
            try
            {
                gelenveri = serialPort1.ReadLine(); // Gelen veri okundu
                adcValue=serialPort1.ReadLine();
                Invoke(new Action(DisplayTime)); // Gelen veri işleme fonksiyonuna geçildi
                Invoke(new Action(DisplayADC)); // Gelen veri işleme fonksiyonuna geçildi
            }
            catch (Exception ex)
            {
                MessageBox.Show("Veri Alma Hatası: " + ex.Message);
            }
        }

        // Gelen Veriyi Görüntüle
private void DisplayTime()
{
    try
    {
        // Gelen veri boş değilse ve "Time:" ile başlıyorsa
        if (!string.IsNullOrEmpty(gelenveri) && gelenveri.StartsWith("Time:"))
        {
            // Gelen veriyi parçalarına ayır
            string[] parts = gelenveri.Split(' ');

            // Time bilgisini kontrol et
            if (parts.Length > 0 && parts[0].StartsWith("Time:"))
            {
                textStartAt.Text = parts[0].Substring(5); // "Time:" kısmını çıkar
            }
            else
            {
                MessageBox.Show("Saat bilgisi eksik veya hatalı: " + gelenveri);
            }
        }
        else
        {
            MessageBox.Show("Beklenmeyen veri formatı alındı (Time): " + gelenveri);
        }
    }
    catch (Exception ex)
    {
        MessageBox.Show("Saat Verisi İşleme Hatası: " + ex.Message);
    }
}

private void DisplayADC()
{
    try
    {
        // Gelen veri boş değilse ve "ADC:" içeriyorsa
        if (!string.IsNullOrEmpty(gelenveri) && gelenveri.Contains("ADC:"))
        {
            // ADC bilgisini al
            int adcIndex = gelenveri.IndexOf("ADC:"); // "ADC:"nin başlangıç index'ini al
            string adcData = gelenveri.Substring(adcIndex + 4); // "ADC:"yi çıkararak veriyi al

            // ADC verisini ekranda göster
            textADC.Text = adcData.Trim(); // Metin kutusuna yaz (gereksiz boşlukları sil)
        }
        else
        {
            MessageBox.Show("Beklenmeyen veri formatı alındı: " + gelenveri);
        }
    }
    catch (Exception ex)
    {
        MessageBox.Show("ADC Verisi İşleme Hatası: " + ex.Message);
    }
}
    }
}
