#include <stdint.h>
#include <stdbool.h>
#include "inc/hw_types.h"
#include "inc/hw_memmap.h"
#include "driverlib/sysctl.h"
#include "driverlib/sysctl.c"
#include "driverlib/gpio.h"
#include "driverlib/gpio.c"
#include "inc/hw_gpio.h"
#include "driverlib/i2c.h"
#include "driverlib/i2c.c"
#include "driverlib/pin_map.h"
#include "inc/tm4c123gh6pm.h"

void init();

int device_address=0x55; // Slave cihaz adresi

int main(void)
{
    init(); // Donanım ve protokol için gerekli ayarlar yapılıyor

    while(1)
    {
        // Slave cihaz adresi master modda ayarlanıyor (yazma için false)
        I2CMasterSlaveAddrSet(I2C0_BASE, 0x55, false); 

        // Slave cihaza gönderilecek veri kaydediliyor
        I2CMasterDataPut(I2C0_BASE, 'B'); 

        // Veri gönderme komutu veriliyor
        I2CMasterControl(I2C0_BASE, I2C_MASTER_CMD_SINGLE_SEND);

        // Veri aktarımı tamamlanana kadar bekleniyor
        while(I2CMasterBusy(I2C0_BASE));

        // Slave cihazdan veri okuma başlatılıyor (okuma için true)
        I2CMasterSlaveAddrSet(I2C0_BASE, 0x55, true);
        I2CMasterControl(I2C0_BASE, I2C_MASTER_CMD_SINGLE_RECEIVE);

        // Veri alımı tamamlanana kadar bekleniyor
        while(I2CMasterBusy(I2C0_BASE));

        // Alınan veri kaydediliyor
        int xx= I2CMasterDataGet(I2C0_BASE);

        // Alınan veriyle işlemler yapılabilir (burada örnek olarak xx = 4 yapılıyor)
        xx=4;
    }
}

void init(){
    // Sistem saatini PLL kullanarak 16 MHz olarak ayarla
    SysCtlClockSet(SYSCTL_SYSDIV_4|SYSCTL_USE_PLL|SYSCTL_XTAL_16MHZ|SYSCTL_OSC_MAIN);

    // GPIO PORTF aktif hale getiriliyor
    SysCtlPeripheralEnable(SYSCTL_PERIPH_GPIOF);

    // PORTF Pin 1, 2 ve 3 çıkış (output) olarak ayarlanıyor
    GPIOPinTypeGPIOOutput(GPIO_PORTF_BASE, GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3);

    // PORTF Pin 0'un kilidini aç (kilitlenmiş pinler için gerekli)
    HWREG(GPIO_PORTF_BASE + GPIO_O_LOCK) = GPIO_LOCK_KEY;
    HWREG(GPIO_PORTF_BASE + GPIO_O_CR) |= 0x01;

    // PORTF Pin 0 ve 4' ın giriş (input) olarak ayarlanması
    GPIOPinTypeGPIOInput(GPIO_PORTF_BASE, GPIO_PIN_0|GPIO_PIN_4);
    GPIOPadConfigSet(GPIO_PORTF_BASE, GPIO_PIN_0|GPIO_PIN_4, GPIO_STRENGTH_4MA, GPIO_PIN_TYPE_STD_WPU); 

    // PORTF Pin 1, 2 ve 3'teki çıkışları sifırla (LED söndürmek için)
    GPIOPinWrite(GPIO_PORTF_BASE, GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3, 0);

    // I2C0 ve GPIOB aktif hale getiriliyor
    SysCtlPeripheralEnable(SYSCTL_PERIPH_I2C0);
    SysCtlPeripheralEnable(SYSCTL_PERIPH_GPIOB);

    // I2C kullanımı için PB2 (SCL) ve PB3 (SDA) pinlerini ayarla
    GPIOPinConfigure(GPIO_PB2_I2C0SCL);
    GPIOPinConfigure(GPIO_PB3_I2C0SDA);
    GPIOPinTypeI2CSCL(GPIO_PORTB_BASE, GPIO_PIN_2);
    GPIOPinTypeI2C(GPIO_PORTB_BASE, GPIO_PIN_3);

    // I2C0'un kullanıma hazır olmasını bekle
    while(!SysCtlPeripheralReady(SYSCTL_PERIPH_I2C0));

    // I2C master modunu başlat ve saat frekansını ayarla
    I2CMasterInitExpClk(I2C0_BASE, SysCtlClockGet(), false);

    // I2C master slave adresini belirle (0x55 adresine veri gönder)
    I2CMasterSlaveAddrSet(I2C0_BASE, 0x55, false);
}
